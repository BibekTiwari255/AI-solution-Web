# Generated by Django 5.2.4 on 2025-10-04 13:08

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(help_text='URL-friendly version of title', unique=True)),
                ('description', models.TextField()),
                ('content', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('ai', 'AI & Machine Learning'), ('prototyping', 'Rapid Prototyping'), ('analytics', 'Analytics & Insights'), ('security', 'Security & Compliance'), ('integration', 'Integration'), ('global', 'Global')], max_length=50)),
                ('icon_class', models.CharField(help_text='Remix icon class', max_length=100)),
                ('read_time', models.PositiveIntegerField(help_text='Reading time in minutes')),
                ('author', models.CharField(default='AI-Solutions Team', max_length=100)),
                ('views', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=True)),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('event_type', models.CharField(choices=[('workshop', 'Workshop'), ('webinar', 'Webinar'), ('conference', 'Conference'), ('networking', 'Networking'), ('demo', 'Demo Day'), ('masterclass', 'Masterclass')], max_length=50)),
                ('icon_class', models.CharField(help_text='Remix icon class', max_length=100)),
                ('date', models.DateTimeField()),
                ('location', models.CharField(max_length=200)),
                ('duration', models.CharField(help_text="e.g., '2 Days', '4 hours'", max_length=100)),
                ('price', models.CharField(default='Free', max_length=50)),
                ('spots_remaining', models.PositiveIntegerField(blank=True, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='GalleryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('events', 'Events'), ('office', 'Office'), ('team', 'Team'), ('products', 'Products'), ('conferences', 'Conferences'), ('workshops', 'Workshops')], max_length=50)),
                ('image', models.ImageField(upload_to='gallery/')),
                ('alt_text', models.CharField(help_text='Alternative text for accessibility', max_length=200)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PricingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.CharField(help_text="e.g., 'Â£2,999', 'Custom'", max_length=50)),
                ('period', models.CharField(default='per month', max_length=50)),
                ('description', models.TextField(blank=True)),
                ('features', models.JSONField(default=list, help_text='List of features')),
                ('is_popular', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('ai_assistant', 'AI Virtual Assistant'), ('rapid_prototyping', 'Rapid Prototyping'), ('analytics', 'Analytics & Insights'), ('security', 'Security & Compliance'), ('automation', 'Workflow Automation'), ('data', 'Data Analytics')], max_length=50)),
                ('icon_class', models.CharField(help_text='Remix icon class (e.g., ri-robot-2-line)', max_length=100)),
                ('features', models.JSONField(default=list, help_text='List of features')),
                ('metrics', models.JSONField(default=dict, help_text="Key metrics (e.g., {'resolution': '80%', 'availability': '24/7'})")),
                ('pricing', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('position', models.CharField(max_length=100)),
                ('company', models.CharField(max_length=100)),
                ('industry', models.CharField(choices=[('healthcare', 'Healthcare'), ('retail', 'Retail'), ('manufacturing', 'Manufacturing'), ('financial', 'Financial'), ('education', 'Education'), ('technology', 'Technology'), ('logistics', 'Logistics')], max_length=50)),
                ('content', models.TextField()),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5)),
                ('avatar_initials', models.CharField(help_text="Initials for avatar (e.g., 'SJ')", max_length=2)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
    ]
